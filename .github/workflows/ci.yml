name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  quality-and-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.10.0

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check code formatting
        run: |
          pnpm format
          if ! git diff --exit-code; then
            echo "‚ùå Code is not properly formatted. Please run 'pnpm format' locally."
            exit 1
          else
            echo "‚úÖ Code is properly formatted"
          fi

      - name: Run linter
        run: pnpm lint

      - name: setup Docker compose
        uses: docker/setup-compose-action@v1

      - name: Run Docker
        run: docker compose up -d

      - name: Run tests
        run: |
          pnpm prisma:migrate:test
          if pnpm test --help >/dev/null 2>&1; then
            echo "üß™ Running tests..."
            pnpm test
          else
            echo "‚ö†Ô∏è No tests found - skipping test step"
          fi

      - name: Validate Prisma schema
        env:
          DATABASE_URL: "postgresql://user:password@localhost:5432/test_db"
        run: pnpm prisma:validate

      - name: Generate Prisma client
        env:
          DATABASE_URL: "postgresql://user:password@localhost:5432/test_db"
        run: pnpm prisma:generate

      - name: Build project
        run: pnpm build

  e2e:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.10.0

      - name: Install dependencies (root)
        run: pnpm install --frozen-lockfile

      - name: Build frontend
        run: pnpm frontend:build

      - name: Start frontend
        run: pnpm frontend:preview &

      - name: Wait for frontend
        run: npx wait-on http://localhost:5173

      - name: Run Cypress tests
        run: pnpm e2e:run
